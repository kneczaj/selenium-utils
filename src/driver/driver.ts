import { Options } from 'selenium-webdriver/chrome';
import {
  Builder,
  Locator,
  ThenableWebDriver,
  until,
  WebDriver
} from 'selenium-webdriver';
import { AugmentedThenableWebDriver, AugmentedWebDriver, DriverParams, ScreenSize } from "./model";
import { ElementPromise, fromWebElement } from "../element";

/**
 * This adds internal overrides used by the tests
 * @param driver the driver to augment
 * @param defaultTimeout wait timeout in milliseconds
 * @param baseUrl the url used to resolve relative paths
 */
export function augmentDriver(driver: WebDriver, defaultTimeout: number, baseUrl: string): AugmentedThenableWebDriver {
  const originalGet = driver.get.bind(driver);
  /**
   * Add waiting for an element up to timeout to standard findElement function.
   * @param locator
   * @param timeout
   */
  function findWithWait(this: AugmentedThenableWebDriver, locator: Locator, timeout: number = defaultTimeout): ElementPromise {
    return new ElementPromise(
      this,
      driver
        .wait(until.elementLocated(locator), timeout)
        .then(webElement => fromWebElement(webElement))
    );
  }
  function getRelative(relativeUrl: string) {
    return originalGet(new URL(relativeUrl, baseUrl).href);
  }
  // WARNING: Object.assign actually mutates driver!
  return (<any>Object).assign(driver, {
    /**
     * This is generated by selenium IDE chrome plugin, and by default does not wait for and element to show up so
     * such a substitution saves our time ;)
     * @param locator
     */
    findElement: findWithWait,
    /**
     * The original findElement command
     */
    noWaitFindElement: driver.findElement,
    getAbsolute: originalGet,
    get: getRelative
  });
}

export function getDriver(screenSize: ScreenSize): ThenableWebDriver {
  const baseDriver = new Builder().forBrowser('chrome');
  return baseDriver.setChromeOptions(new Options().detachDriver(true)).build();
}

export async function getAugmentedDriver(params: DriverParams, baseUrl: string): Promise<AugmentedWebDriver> {
  return augmentDriver(await getDriver(params.screenSize), params.timeout, baseUrl);
}
